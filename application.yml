spring:
  output:
    ansi:
      enabled: always

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.server-url}/realms/${keycloak.realm}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

host:
  ip: 172.20.85.79

keycloak:
  server-url: http://${host.ip}:8281
  realm: saas-realm
  client-id: saas-client
  client-secret: XEZvEoVQRxYHitcrfeBJoVx5rY9mYd7U
  openIdConnectUrl: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/.well-known/openid-configuration

discovery:
  server-url: http://${host.ip}:8761

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: ${discovery.server-url}/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always



# spring:
#   output:
#     ansi:
#       enabled: always

#   security:
#     oauth2:
#       resourceserver:
#         jwt:
#           issuer-uri: http://172.20.85.79:8281/realms/saas-realm
#           jwk-set-uri: http://172.20.85.79:8281/realms/saas-realm/protocol/openid-connect/certs

# eureka:
#   instance:
#     prefer-ip-address: true
#   client:
#     fetch-registry: true
#     register-with-eureka: true
#     serviceUrl:
#       defaultZone: http://172.20.85.79:8761/eureka/

# management:
#   endpoints:
#     web:
#       exposure:
#         include: "*"
#   endpoint:
#     health:
#       show-details: always

# keycloak:
#   server-url: http://172.20.85.79:8281
#   realm: saas-realm
#   client-id: saas-client
#   client-secret: XEZvEoVQRxYHitcrfeBJoVx5rY9mYd7U
#   openIdConnectUrl: http://172.20.85.79:8281/realms/saas-realm/.well-known/openid-configuration
